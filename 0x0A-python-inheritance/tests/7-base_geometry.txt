The integer_validator Module
============================

Using integer_validator
-----------------------

In this text file will validate the value given to its
integer_validator

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()

Now use it:

Using integers:
    >>> bg.integer_validator("my_int", 1)
    >>> bg.integer_validator("width", 89)
    >>> bg.integer_validator("width", int("5"))

Using 0 and less than 0
    >>> try:
    ...     bg.integer_validator("my_int", 0)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] my_int must be greater than 0

    >>> try:
    ...     bg.integer_validator("name", -1)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] name must be greater than 0

Using non int

    >>> try:
    ...     bg.integer_validator("my_int", "0")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] my_int must be an integer

    >>> try:
    ...     bg.integer_validator("age", [0])
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] age must be an integer

    >>> try:
    ...     bg.integer_validator("float", 4.2)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] float must be an integer
